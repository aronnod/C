//Creates a Game of Blackjack

#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <time.h>
#include <string.h>
#include <stdbool.h>

void Random_Gen(int* aa) {
    int min = 0;
    int max = 51;
    
    *aa = min + rand() % (max - min + 1);
}

struct Card {
    char suit[10];
    char rank[6];
    int value;
};

void Player_Hand(struct Card* deck, int* rand_p, int player_count) {
    Random_Gen(&rand_p[player_count]);
    
    printf("Player's Card\n");
    printf("Suit: %s\t", deck[rand_p[player_count]].suit);
    printf("Rank: %s\t", deck[rand_p[player_count]].rank);
    printf("Value: %d\n", deck[rand_p[player_count]].value);
}

void Dealer_Hand(struct Card* deck, int* rand_d, int dealer_count) {
    Random_Gen(&rand_d[dealer_count]);
    
    printf("Dealer's Card\n");
    printf("Suit: %s\t", deck[rand_d[dealer_count]].suit);
    printf("Rank: %s\t", deck[rand_d[dealer_count]].rank);
    printf("Value: %d\n", deck[rand_d[dealer_count]].value);
}

bool duplicate_checker(int array_[], int value, int player_count) {
    for (int i = 0; i < player_count; i++) {
        if (array_[i] == value) {
            return true;
        }
    }
    return false;
}

int main() {
    srand(time(NULL)); 

    int x, i, j;
    printf("-----   Shuffling...   -----\n");
    printf("Press 1 to Play, and 2 to terminate\n");
    scanf("%d", &x);

    if (x == 2)
        exit(0);

    printf("Dealing...\n");

    struct Card deck[52];

    char suits[4][10] = {"Hearts", "Diamonds", "Clubs", "Spades"};
    char ranks[13][6] = {"Ace", "2", "3", "4", "5", "6", "7", "8", "9", "10", "Jack", "Queen", "King"};

    int card_ind = 0;

    for (i = 0; i < 4; i++) {
        for (j = 0; j < 13; j++) {
            strcpy(deck[card_ind].suit, suits[i]);
            strcpy(deck[card_ind].rank, ranks[j]);

            if (j >= 9) {
                deck[card_ind].value = 10;
            } else {
                deck[card_ind].value = j + 1;
            }

            card_ind++;
        }
    }

    int rand_p[7];
    int rand_d[7];
    int player_count = 0;
    int dealer_count = 0;
    int player_sum = 0;
    int dealer_sum = 0;
    int player_choice = 0;
    int ace_choice = 0;


    while (player_sum <= 21) {
    Player_Hand(deck, rand_p, player_count);
    while (duplicate_checker(rand_p, rand_p[player_count], player_count) == true) {
        printf("Duplicate Card... Dealing a new card\n");
        Player_Hand(deck, rand_p, player_count);
    }
    if (strcmp(deck[rand_p[player_count]].rank, "Ace") == 0) {
    printf("[]Ace Card dealt, would you like it to have a value of 1 or 11? (Type 1 for 1, 11 for 11)\n");
    scanf("%d", &ace_choice);
    if (ace_choice == 11) {
        deck[rand_p[player_count]].value = 11;
    }
}

    player_sum += deck[rand_p[player_count]].value;
    printf("|||Player's Cards Total to %d\n", player_sum);
    player_count++;
    if (player_sum > 21) {
        printf("X.X Bust\n");
        break;
    }
    printf("Press 1 to stand, or 2 to take a card\n");
    scanf("%d", &player_choice);
    if (player_choice == 1) {
        break;
    }
}

    while (dealer_sum < 17) {
    Dealer_Hand(deck, rand_d, dealer_count);
    while (duplicate_checker(rand_d, rand_d[dealer_count], dealer_count) == true) {
        printf("-><- Duplicate Card... Dealing a new card\n");
        Dealer_Hand(deck, rand_d, dealer_count);
    }
    dealer_sum += deck[rand_d[dealer_count]].value;
    printf("|||Dealer's Cards Total to %d\n", dealer_sum);
    dealer_count++;
    if (dealer_sum > 21) {
        printf("X.X Bust\n");
        break;
    }
}

int deal = 21 - dealer_sum;
int play = 21 - player_sum;

if (player_sum > 21) {
	printf("Player bust, so the house wins");
}
else {
if (deal < play && dealer_sum < 22) {
	 printf("The house is closer to 21, so the house wins");
 }
if (deal > play && dealer_sum < 22) {
	 printf("The player is closer to 21, so the player wins");
 }
if (player_sum < 22 && dealer_sum > 21) {
	printf("Dealer bust, so the player wins");
}
if (deal == play) {
	printf("Tie~!");
}
    return 0;
}

}
